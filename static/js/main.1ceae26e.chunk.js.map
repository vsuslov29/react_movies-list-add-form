{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","errorMessage","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isTitleInvalid","isDescriptionInvalid","isImgUrlInvalid","isImdbUrlInvalid","isImdbIdInvalid","inputsValidations","setInputsValidations","onInputBlur","isInvalidName","value","name","test","isInvalid","onSubmit","event","preventDefault","type","onChange","target","onBlur","classNames","invalid","placeholder","autoComplete","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ceae26e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nconst isInvalid = (value: string, name = '') => {\n  switch (name) {\n    case 'imgUrl':\n    case 'imdbUrl':\n      return !(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n        .test(value));\n\n    default:\n      return value === '';\n  }\n};\n\nconst errorMessage = 'Invalid value';\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [inputsValidations, setInputsValidations] = useState({\n    isTitleInvalid: false,\n    isDescriptionInvalid: false,\n    isImgUrlInvalid: false,\n    isImdbUrlInvalid: false,\n    isImdbIdInvalid: false,\n  });\n\n  const clearForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const onAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(newMovie);\n    clearForm();\n  };\n\n  const onInputBlur = (\n    isInvalidName: string,\n    value: string,\n    name: string,\n  ) => {\n    setInputsValidations({\n      ...inputsValidations,\n      [isInvalidName]: isInvalid(value, name),\n    });\n  };\n\n  const {\n    isTitleInvalid,\n    isImgUrlInvalid,\n    isImdbUrlInvalid,\n    isImdbIdInvalid,\n  } = inputsValidations;\n\n  return (\n    <form\n      onSubmit={onAdd}\n      className=\"form\"\n    >\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={title}\n        onChange={event => {\n          setTitle(event.target.value);\n        }}\n        onBlur={() => onInputBlur(\n          'isTitleInvalid',\n          title,\n          'title',\n        )}\n        className={\n          classNames(\n            'form__input',\n            {\n              invalid: isTitleInvalid,\n            },\n          )\n        }\n        placeholder=\"title\"\n        autoComplete=\"off\"\n      />\n\n      <p className=\"error\">{isTitleInvalid && errorMessage}</p>\n\n      <input\n        type=\"text\"\n        name=\"description\"\n        value={description}\n        className=\"form__input\"\n        onChange={event => setDescription(event.target.value)}\n        placeholder=\"description\"\n        autoComplete=\"off\"\n      />\n\n      <input\n        type=\"text\"\n        name=\"imgUrl\"\n        value={imgUrl}\n        onChange={event => {\n          setImgUrl(event.target.value);\n        }}\n        onBlur={() => onInputBlur(\n          'isImgUrlInvalid',\n          imgUrl,\n          'imgUrl',\n        )}\n        className={\n          classNames(\n            'form__input',\n            {\n              invalid: isImgUrlInvalid,\n            },\n          )\n        }\n        placeholder=\"img url\"\n        autoComplete=\"off\"\n      />\n\n      <p className=\"error\">{isImgUrlInvalid && errorMessage}</p>\n\n      <input\n        type=\"text\"\n        name=\"imdbUrl\"\n        value={imdbUrl}\n        onChange={event => setImdbUrl(event.target.value)}\n        onBlur={() => onInputBlur(\n          'isImdbUrlInvalid',\n          imdbUrl,\n          'imdbUrl',\n        )}\n        className={\n          classNames(\n            'form__input',\n            {\n              invalid: isImdbUrlInvalid,\n            },\n          )\n        }\n        placeholder=\"imdb url\"\n        autoComplete=\"off\"\n      />\n\n      <p className=\"error\">{isImdbUrlInvalid && errorMessage}</p>\n\n      <input\n        type=\"text\"\n        name=\"imdbId\"\n        value={imdbId}\n        onChange={event => setImdbId(event.target.value)}\n        onBlur={() => onInputBlur(\n          'isImdbIdInvalid',\n          imdbId,\n          'imdbId',\n        )}\n        className={\n          classNames(\n            'form__input',\n            {\n              invalid: isImdbIdInvalid,\n            },\n          )\n        }\n        placeholder=\"imdb id\"\n        autoComplete=\"off\"\n      />\n\n      <p className=\"error\">{isImdbIdInvalid && errorMessage}</p>\n\n      <button\n        type=\"submit\"\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}